CREATE OR REPLACE PROCEDURE GRZ_REL_CONSIST_CAIXA_SP
  (PI_OPCAO IN VARCHAR2, PO_RETORNO OUT VARCHAR2)
  IS
  BEGIN
  DECLARE
	  /* Parametros de entrada ****/
	 pi_grupo	                    NUMBER;
	 pi_uni_ini              	    NUMBER;
	 pi_uni_fim              	    NUMBER;
	 pi_data_ini             	    DATE;
	 pi_data_fim			    DATE;
	 pi_usuario              	    VARCHAR2(50);

	  /* Variaveis de trabalho */
          wi			        NUMBER;
          wf		                NUMBER;
          wDiferenca            	NUMBER;
          wCod_Grupo                    NUMBER;
          Cod_Grupo                     NUMBER;
          wCod_Rede                     NUMBER;
          wVlr_Cartao                   NUMBER(18,2);
          wDes_Rede                     VARCHAR2(50);
          wDes_Rede_Cartao              VARCHAR2(50);
          wDes_Nome_Rede                VARCHAR2(50);
          wDes_Unidade                  VARCHAR2(50);
          wDes_Origem                   VARCHAR2(20);
          w								NUMBER;
          wRegErro                      NUMBER;
          wAtualizados                  NUMBER;


		  pi_conta_cp         			NUMBER;
	      pi_conta_cb        			VARCHAR2(50);


      /* Variaveis de trabalho cred_pessoal */
          wDes_Conta                	VARCHAR2(50);
          wConta_Editado    			VARCHAR2(10);
          wValor	    				NUMBER(18,2);

          SAIDA             			EXCEPTION;


       /* Cursor da tabela GRZ_TEF_TRANSACAO_SERVIDOR */
       CURSOR c_tef_servidor IS
         select a.cod_emp
               ,a.cod_unidade
               ,a.dta_movimento
               ,a.num_nsusitef
               ,a.des_rede
               ,a.num_equipamento
               ,a.vlr_lcto
               ,a.hor_movimento
               ,a.num_nsuhost
               ,a.cod_resposta
               ,a.cod_estabelecimento
               ,a.num_sequencia
          from grz_tef_transacao_servidor a
         where a.cod_emp = 10
           and a.cod_unidade >= pi_uni_ini
           and a.cod_unidade <= pi_uni_fim
           and a.dta_movimento >= pi_data_ini
           and a.dta_movimento <= pi_data_fim
           and a.cod_resposta = '00'
           and a.ind_cancelado = 0
           and not exists (select 1 from grz_tef_transacao_servidor c
                           where a.cod_emp = c.cod_emp
                           and a.cod_unidade = c.cod_unidade
                           and a.dta_movimento = c.dta_movimento
                           and to_number(a.num_nsuhost) = to_number(c.nsu_host_cancel)
                           and c.cod_resposta = '00');

       r_tef_servidor c_tef_servidor%ROWTYPE;


       /* Cursor da tabela CX_MOVIMENTOS */
       CURSOR c_tef_caixas IS
         select a.cod_emp
               ,a.cod_caixa
               ,a.dta_mvto_caixa
               ,a.cod_conta_cb
               ,sum(nvl(a.vlr_entrada,0)) vlr_entrada
               ,sum(nvl(a.vlr_saida,0)) vlr_saida
          from cx_movimentos a
         where a.cod_emp = 1
           and a.cod_caixa >= pi_uni_ini
           and a.cod_caixa <= pi_uni_fim
           and a.dta_mvto_caixa >= pi_data_ini
           and a.dta_mvto_caixa <= pi_data_fim
           and (a.cod_operacao <> 216
                and cod_operacao <> 217)
           and (instr(','||pi_conta_cb||',', ','||a.cod_conta_cb||',') > 0)
           and exists (select 1 from ge_grupos_unidades ge
                        where a.cod_caixa = ge.cod_unidade
                          and ge.cod_grupo = pi_grupo  /*wCod_Grupo*/
                          and ge.cod_emp = 1)
       group by a.cod_emp,a.cod_caixa,a.dta_mvto_caixa,a.cod_conta_cb;

       r_tef_caixas c_tef_caixas%ROWTYPE;


       /* Cursor da tabela CX_MOVIMENTOS cred_pessoal*/
       CURSOR c_caixas_mvto IS
         select a.cod_emp
               ,a.cod_caixa
               ,a.dta_mvto_caixa
               ,nvl(a.vlr_saida,0) vlr_saida
               ,nvl(a.vlr_entrada,0) vlr_entrada
          from cx_movimentos a
         where a.cod_emp = 1
           and a.cod_caixa >= pi_uni_ini
           and a.cod_caixa <= pi_uni_fim
           and a.dta_mvto_caixa >= pi_data_ini
           and a.dta_mvto_caixa <= pi_data_fim
           and a.cod_conta_cb = pi_conta_cp
           and exists (select 1 from ge_grupos_unidades ge
                        where a.cod_caixa = ge.cod_unidade
                          and ge.cod_grupo = pi_grupo
                          and ge.cod_emp = 1
                          and ge.cod_unidade >= pi_uni_ini
                          and ge.cod_unidade <= pi_uni_fim);
       r_caixas_mvto c_caixas_mvto%ROWTYPE;


       /* Cursor da tabela NS_NOTAS cred_pessoal*/
       CURSOR c_notas_mvto IS
         select c.cod_emp
               ,c.cod_unidade
               ,c.dta_emissao
               ,sum(nvl(a.vlr_operacao,0)) vlr_operacao
               ,sum(nvl(a.vlr_acrescimo_cob,0)) vlr_acrescimo
               ,sum(nvl(a.vlr_desconto_cob,0)) vlr_desconto
               ,sum(to_number(nvl(d.vlr_coluna,'0'))) vlr_tac
               ,sum(to_number(nvl(e.vlr_coluna,'0'))) vlr_iof
          from ns_notas c
              ,ns_notas_operacoes a
              ,ns_notas_colunas d
              ,ns_notas_colunas e
         where c.num_seq=a.num_seq
           and c.cod_maquina=a.cod_maquina
           and a.cod_oper in (3000,3050)
           and c.num_seq=d.num_seq(+)
           and c.cod_maquina=d.cod_maquina(+)
           and d.seq_coluna(+)=6
           and c.num_seq=e.num_seq(+)
           and c.cod_maquina=e.cod_maquina(+)
           and e.seq_coluna(+)=5
           and c.cod_unidade >= pi_uni_ini
           and c.cod_unidade <= pi_uni_fim
           and c.dta_emissao >= pi_data_ini
           and c.dta_emissao <= pi_data_fim
           and exists (select 1 from ge_grupos_unidades ge
                        where c.cod_unidade = ge.cod_unidade
                          and ge.cod_grupo = pi_grupo
                          and ge.cod_emp = 1
                          and ge.cod_unidade >= pi_uni_ini
                          and ge.cod_unidade <= pi_uni_fim)
        group by c.cod_emp,c.cod_unidade,c.dta_emissao;
       r_notas_mvto c_notas_mvto%ROWTYPE;



          /* Inicio da procedure principal */
          BEGIN
	       /* Desmembra a opcao recebida */
	      
	       wi := INSTR(pi_opcao, '#', 1, 1);
	       pi_grupo := TO_NUMBER(SUBSTR(pi_opcao, 1,(wi-1)));
	       wf := INSTR(pi_opcao, '#', 1, 2);
	       pi_uni_ini := TO_NUMBER(SUBSTR(pi_opcao,(wi+1),(wf-wi-1)));
	       wi := wf;
	       wf := INSTR(pi_opcao, '#', 1, 3);
   	       pi_uni_fim := TO_NUMBER(SUBSTR(pi_opcao,(wi+1),(wf-wi-1)));
               wi := wf;
	       wf := INSTR(pi_opcao, '#', 1, 4);
	       pi_data_ini := TO_DATE(SUBSTR(pi_opcao,(wi+1),(wf-wi-1)));
	       wi := wf;
	       wf := INSTR(pi_opcao, '#', 1, 5);
	       pi_data_fim := TO_DATE(SUBSTR(pi_opcao,(wi+1),(wf-wi-1)));
	       wi := wf;
	       wf := INSTR(pi_opcao, '#', 1, 6);
               pi_usuario := SUBSTR(pi_opcao,(wi+1),(wf-wi-1));
               
              

               pi_conta_cp := 430;
	       pi_conta_cb := '467,438,439';

               delete from GRZ_TEF_TRANSACAO_DIVERGENCIAS
               where upper(des_usuario) = upper(pi_usuario);
               commit;
                 
              
          /* busca nome do grupo de unidades */
          begin
               SELECT des_grupo
                 INTO wDes_Rede
                 FROM GE_GRUPOS
                WHERE COD_GRUPO = pi_grupo;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                      wDes_Rede := 'GRUPO NAO CADASTRADO';
          end;
          
          wCod_Rede := pi_grupo;

               /* Abre o cursor do Tef Servidor ****/
	       OPEN c_tef_servidor;
	       FETCH c_tef_servidor INTO r_tef_servidor;
	       WHILE c_tef_servidor%FOUND LOOP
	       BEGIN
                         /* nome da rede */
                         if r_tef_servidor.cod_emp = 10 then
                             wDes_Nome_Rede := 'Rede Grazziotin';
                         elsif r_tef_servidor.cod_emp = 20 then
                             wDes_Nome_Rede := 'Rede Tech Box';
                         elsif r_tef_servidor.cod_emp = 30 then
                             wDes_Nome_Rede := 'Rede PorMenos';
                         elsif r_tef_servidor.cod_emp = 40 then
                             wDes_Nome_Rede := 'Rede Franco Giorgi';
                         elsif r_tef_servidor.cod_emp = 50 then
                             wDes_Nome_Rede := 'Rede Tottal';
                         else
                             wDes_Nome_Rede := 'Rede nao Cadastrada';
                         end if;

                         /* nome da origem do tef */
                         wDes_Origem := 'TEF';

                         /* busca nome da unidade */
                         begin
                              SELECT des_nome
                                INTO wDes_Unidade
                                FROM GE_UNIDADES
                               WHERE COD_UNIDADE = r_tef_servidor.cod_unidade;
                              EXCEPTION
                                  WHEN NO_DATA_FOUND THEN
                                     wDes_Unidade  := 'Unidade nao Cadastrada';
                         end;

                         /*if pi_ind_rede_orig = 4 then*/
                              wDes_Rede_Cartao := ' ';
                         /*else
                              wDes_Rede_Cartao := r_tef_servidor.des_rede;
                         end if;*/

                 begin
           	        insert into GRZ_TEF_TRANSACAO_DIVERGENCIAS(DES_USUARIO
           	                    ,COD_EMP
           	                    ,COD_UNIDADE
           	                    ,DTA_MOVIMENTO
           	                    ,NUM_NSUSITEF
           	                    ,DES_REDE
           	                    ,DES_BANDEIRA
           	                    ,NUM_EQUIPAMENTO
           	                    ,VLR_LCTO
           	                    ,NUM_CUPOM
           	                    ,HOR_MOVIMENTO
           	                    ,TIP_ORIGEM
           	                    ,NUM_NSUHOST
           	                    ,IND_CANCELADO
           	                    ,HOR_MOVIMENTO_SERV
           	                    ,NUM_EQUIPAMENTO_SERV
           	                    ,NUM_NSUHOST_SERV
           	                    ,VLR_LCTO_SERV
           	                    ,COD_RESPOSTA
           	                    ,COD_ESTABELECIMENTO
								,NUM_SEQUENCIA_SERV
           	                    ,DES_ORIGEM
           	                    ,DES_NOME_REDE
           	                    ,DES_UNIDADE
           	                    ,VLR_DIFERENCA)
           	                    VALUES(pi_usuario
           	                           ,r_tef_servidor.cod_emp
           	                           ,r_tef_servidor.cod_unidade
           	                           ,r_tef_servidor.dta_movimento
           	                           ,r_tef_servidor.num_nsusitef
           	                           ,wDes_Rede_Cartao
           	                           ,wDes_Rede_Cartao
           	                           ,70 /* ,r_tef_servidor.num_equipamento */
           	                           ,0 /* VLR_LCTO*/
           	                           ,0
           	                           ,null
           	                           ,0
           	                           ,'0'
           	                           ,0
           	                           ,r_tef_servidor.hor_movimento
           	                           ,r_tef_servidor.num_equipamento
           	                           ,r_tef_servidor.num_nsuhost
           	                           ,r_tef_servidor.vlr_lcto
           	                           ,r_tef_servidor.cod_resposta
           	                           ,r_tef_servidor.cod_estabelecimento
           	                           ,r_tef_servidor.num_sequencia
           	                           ,wDes_Origem
           	                           ,wDes_Nome_Rede
           	                           ,wDes_Unidade
           	                           ,0 /* VLR_DIFERENCA*/
           	                           );
           	     end;
               END;
               FETCH c_tef_servidor INTO r_tef_servidor;
               END LOOP;
               CLOSE c_tef_servidor;

               
               Cod_Grupo := pi_grupo;


               /* Abre o cursor dos Caixas ****/
	       OPEN c_tef_caixas;
	       FETCH c_tef_caixas INTO r_tef_caixas;
	       WHILE c_tef_caixas%FOUND LOOP
	       BEGIN
                         /* nome da origem do tef */
                         wDes_Origem := 'TEF';

                         /* busca nome da unidade */
                         begin
                              SELECT des_nome
                                    ,cod_nivel2
                                INTO wDes_Unidade
                                    ,wCod_Grupo
                                FROM GE_UNIDADES
                               WHERE COD_UNIDADE = r_tef_caixas.cod_caixa;
                              EXCEPTION
                                  WHEN NO_DATA_FOUND THEN
                                     wDes_Unidade  := 'Unidade nao Cadastrada';
                                     wCod_Grupo    := 0;
                         end;

                         /* nome da rede */
                         if wCod_Grupo = 810 then
                             wCod_Rede      := 10;
                             wDes_Nome_Rede := 'Rede Grazziotin';
                         elsif wCod_Grupo = 820 then
                             wCod_Rede      := 20;
                             wDes_Nome_Rede := 'Rede Tech Box';
                         elsif wCod_Grupo = 830 then
                             wCod_Rede      := 30;
                             wDes_Nome_Rede := 'Rede PorMenos';
                         elsif wCod_Grupo = 840 then
                             wCod_Rede      := 40;
                             wDes_Nome_Rede := 'Rede Franco Giorgi';
                         elsif wCod_Grupo = 850 then
                             wCod_Rede      := 50;
                             wDes_Nome_Rede := 'Rede Tottal';
                         else
                             wCod_Rede      := 0;
                             wDes_Nome_Rede := 'Rede nao Cadastrada';
                         end if;

                         /* busca nome da rede administradora do cartao */
                         /*if r_tef_caixas.cod_conta_cb = 467 then
                             wDes_Rede_Cartao  := 'BANRISUL';
                         elsif (r_tef_caixas.cod_conta_cb = 438) then
                             wDes_Rede_Cartao  := 'VISANET';
                         elsif (r_tef_caixas.cod_conta_cb = 439) then
                             wDes_Rede_Cartao  := 'REDECARD';
                         else
                             wDes_Rede_Cartao  := 'INEXISTENTE';
                         end if;*/

                         /*if pi_ind_rede_orig = 4 then*/
                              wDes_Rede_Cartao := ' ';
                         /*end if;*/

                         begin
           	              wVlr_Cartao := r_tef_caixas.vlr_saida - r_tef_caixas.vlr_entrada;

						  insert into GRZ_TEF_TRANSACAO_DIVERGENCIAS(DES_USUARIO
           	                  				   	                ,COD_EMP
           	                				   	                ,COD_UNIDADE
           	                                                   	,DTA_MOVIMENTO
           	                                                   	,NUM_NSUSITEF
           	                                                   	,DES_REDE
           	                                                   	,DES_BANDEIRA
           	                                                   	,NUM_EQUIPAMENTO
           	                                                   	,VLR_LCTO
           	                                                   	,NUM_CUPOM
           	                                                   	,HOR_MOVIMENTO
           	                                                   	,TIP_ORIGEM
           	                                                   	,NUM_NSUHOST
           	                                                   	,IND_CANCELADO
           	                                                   	,HOR_MOVIMENTO_SERV
           	                                                   	,NUM_EQUIPAMENTO_SERV
           	                                                   	,NUM_NSUHOST_SERV
           	                                                   	,VLR_LCTO_SERV
           	                                                   	,COD_RESPOSTA
           	                                                   	,COD_ESTABELECIMENTO
           	                				   	                ,NUM_SEQUENCIA_SERV
           	                                                   	,DES_ORIGEM
           	                                                   	,DES_NOME_REDE
           	                                                   	,DES_UNIDADE
           	                                                   	,VLR_DIFERENCA)
           	                                                  VALUES(pi_usuario
           	                                                        ,wCod_Rede
           	                                                        ,r_tef_caixas.cod_caixa
           	                                                        ,r_tef_caixas.dta_mvto_caixa
           	                                                        ,NULL
           	                                                        ,wDes_Rede_Cartao
           	                                                        ,wDes_Rede_Cartao
           	                                                        ,70 /*NULL*/
           	                                                        ,wVlr_Cartao
           	                                                        ,NULL
           	                                                        ,NULL
           	                                                        ,0
           	                                                        ,NULL
           	                                                        ,NULL
           	                                                        ,NULL
           	                                                        ,NULL
           	                                                        ,NULL
           	                                                        ,0
           	                                                        ,NULL
           	                                                        ,NULL
           	                                                        ,NULL
           	                                                        ,wDes_Origem
           	                                                        ,wDes_Nome_Rede
           	                                                        ,wDes_Unidade
           	                                                        ,0
           	                                                        );
           	         end;
            END;
            FETCH c_tef_caixas INTO r_tef_caixas;
            END LOOP;
            CLOSE c_tef_caixas;
            insert into teste values('f');
	       commit; 
          /* Abre o cursor dos caixas cred_pessoal****/

           /* busca nome da conta */
          begin
             SELECT des_conta
               INTO wDes_Conta
               FROM CB_CONTAS
              WHERE COD_CONTA = pi_conta_cp;
              EXCEPTION
                   WHEN NO_DATA_FOUND THEN
                        wDes_Conta := 'Conta nao cadastrada';
          end;
          
          /* busca codigo editado da conta */
          begin
             SELECT cod_editado
               INTO wConta_Editado
               FROM CB_MASCARAS
              WHERE COD_MASCARA = 201
                AND COD_CONTA = pi_conta_cp;
                EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                          wConta_Editado := '999999';
          end;
          
	  OPEN c_caixas_mvto;
	  FETCH c_caixas_mvto INTO r_caixas_mvto;
	  WHILE c_caixas_mvto%FOUND LOOP
	  BEGIN
             /* busca nome da unidade */
             begin
                SELECT des_nome
                      ,cod_nivel2
                  INTO wDes_Unidade
                      ,wCod_Rede
                  FROM GE_UNIDADES
                 WHERE COD_UNIDADE = r_caixas_mvto.cod_caixa;
                EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                          wDes_Unidade  := 'Unidade nao Cadastrada';
                          wCod_Rede    := 0;
             end;

            wValor := nvl(r_caixas_mvto.vlr_saida,0) - nvl(r_caixas_mvto.vlr_entrada,0);
            insert into GRZ_TEF_TRANSACAO_DIVERGENCIAS(DES_USUARIO
       	       				   	                      ,COD_EMP
                       	                	          ,COD_UNIDADE
       	                                              ,DTA_MOVIMENTO
                       	                              ,DES_REDE
                       	                              ,NUM_EQUIPAMENTO
													  ,VLR_LCTO
                       	                              ,VLR_LCTO_SERV
                       	                              ,VLR_DIFERENCA
                       	                              ,DES_UNIDADE
                       	                              ,COD_AUTORIZACAO
                       	                              ,DES_ORIGEM)
       	                                        VALUES(pi_usuario
                       	                              ,r_caixas_mvto.cod_emp
                       	                              ,r_caixas_mvto.cod_caixa
                       	                              ,r_caixas_mvto.dta_mvto_caixa
                       	                              ,SUBSTR(wDes_Rede,1,20)
                       	                              ,80
													  ,wValor
                       	                              ,0
                       	                              ,0
                       	                              ,wDes_Unidade
                       	                              ,wConta_Editado
                       	                              ,SUBSTR(wDes_Conta,1,20));
          END;
          FETCH c_caixas_mvto INTO r_caixas_mvto;
          END LOOP;
          CLOSE c_caixas_mvto;
          
          /* Abre o cursor das notas ****/
	  OPEN c_notas_mvto;
	  FETCH c_notas_mvto INTO r_notas_mvto;
	  WHILE c_notas_mvto%FOUND LOOP
	  BEGIN
             /* busca nome da unidade */
             begin
                SELECT des_nome
                      ,cod_nivel2
                  INTO wDes_Unidade
                      ,wCod_Rede
                  FROM GE_UNIDADES
                 WHERE COD_UNIDADE = r_notas_mvto.cod_unidade;
                EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                          wDes_Unidade  := 'Unidade nao Cadastrada';
                          wCod_Rede    := 0;
             end;
            if r_notas_mvto.dta_emissao > to_date('15/01/2008','dd/mm/yyyy') then
                wValor := nvl(r_notas_mvto.vlr_operacao,0) - nvl(r_notas_mvto.vlr_tac,0) - nvl(r_notas_mvto.vlr_iof,0);
            else
                wValor := nvl(r_notas_mvto.vlr_operacao,0) - nvl(r_notas_mvto.vlr_tac,0);
            end if;
            insert into GRZ_TEF_TRANSACAO_DIVERGENCIAS(DES_USUARIO
       	       				   	                      ,COD_EMP
                       	                	          ,COD_UNIDADE
       	                                              ,DTA_MOVIMENTO
                       	                              ,DES_REDE
                       	                              ,NUM_EQUIPAMENTO
													  ,VLR_LCTO
                       	                              ,VLR_LCTO_SERV
                       	                              ,VLR_DIFERENCA
                       	                              ,DES_UNIDADE
                       	                              ,COD_AUTORIZACAO
                       	                              ,DES_ORIGEM)
       	                                        VALUES(pi_usuario
                       	                              ,r_notas_mvto.cod_emp
                       	                              ,r_notas_mvto.cod_unidade
                       	                              ,r_notas_mvto.dta_emissao
                       	                              ,SUBSTR(wDes_Rede,1,20)
                       	                              ,80
													  ,0
                       	                              ,wValor
                       	                              ,0
                       	                              ,wDes_Unidade
                       	                              ,wConta_Editado
                       	                              ,SUBSTR(wDes_Conta,1,20));
          END;
          FETCH c_notas_mvto INTO r_notas_mvto;
          END LOOP;
          CLOSE c_notas_mvto;


        COMMIT;

         EXCEPTION
             WHEN SAIDA THEN
                 NULL;

       end;

   END GRZ_REL_CONSIST_CAIXA_SP;

/
