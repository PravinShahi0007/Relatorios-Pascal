unit uRel_Campanha_Marketing;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ComCtrls, Buttons, Mask, ExtCtrls, ppParameter,
  ppCtrls, ppBands, ppClass, jpeg, ppPrnabl, ppVar, ppCache, ppProd,
  ppReport, ppComm, ppRelatv, ppDB, ppDBPipe, DB, DBTables, ppViewr, Encryp,
  ppStrtch, ppRegion, TXComp, TXRB, Xpman, ppModule, raCodMod;

type
  TfrmRel_Prod_CD = class(TForm)
    Panel1: TPanel;
    Panel7: TPanel;
    Label9: TLabel;
    Label10: TLabel;
    edtDataFinal: TMaskEdit;
    edtDataInicial: TMaskEdit;
    pnlbuttons: TPanel;
    pnlDisplay: TPanel;
    Label11: TLabel;
    Label12: TLabel;
    Database1: TDatabase;
    StpRel_Campanha: TStoredProc;
    Session1: TSession;
    qryRel: TQuery;
    DataSource1: TDataSource;
    pprRelatorio: TppReport;
    ppParameterList1: TppParameterList;
    qryConsulta: TQuery;
    TomEncryption1: TTomEncryption;
    ExtraOptions1: TExtraOptions;
    ppDBPipeline1: TppDBPipeline;
    ppCabecalho: TppHeaderBand;
    ppSystemVariable3: TppSystemVariable;
    ppLabel9: TppLabel;
    ppLabel10: TppLabel;
    pplblDescricao: TppLabel;
    ppLabel26: TppLabel;
    ppSystemVariable1: TppSystemVariable;
    ppImage1: TppImage;
    ppDetalhes: TppDetailBand;
    ppFooterBand: TppFooterBand;
    Label1: TLabel;
    EdtGrupo: TEdit;
    BitBtn1: TBitBtn;
    BitBtn2: TBitBtn;
    ppGroup1: TppGroup;
    ppGroupHeaderBand1: TppGroupHeaderBand;
    ppGroupFooterBand1: TppGroupFooterBand;
    ppShape2: TppShape;
    ppLabel2: TppLabel;
    ppLabel1: TppLabel;
    ppLabel5: TppLabel;
    ppLabel6: TppLabel;
    ppLabel7: TppLabel;
    ppLabel8: TppLabel;
    ppLabel11: TppLabel;
    ppLabel12: TppLabel;
    ppLabel14: TppLabel;
    ppLabel18: TppLabel;
    ppLabel19: TppLabel;
    ppLabel20: TppLabel;
    ppGroup2: TppGroup;
    ppGroupHeaderBand2: TppGroupHeaderBand;
    ppGroupFooterBand2: TppGroupFooterBand;
    ppDBText5: TppDBText;
    ppDBText6: TppDBText;
    ppDBText1: TppDBText;
    ppDBCod_unidade: TppDBText;
    ppLabel4: TppLabel;
    ppDBText3: TppDBText;
    ppDBText4: TppDBText;
    ppDBText9: TppDBText;
    ppDBText10: TppDBText;
    ppDBText11: TppDBText;
    ppDBText12: TppDBText;
    ppDBText14: TppDBText;
    ppDBText15: TppDBText;
    ppDBText17: TppDBText;
    ppDBText18: TppDBText;
    ppLine2: TppLine;
    ppLabel3: TppLabel;
    ppDBText7: TppDBText;
    ppLabel13: TppLabel;
    ppLabel15: TppLabel;
    ppLabelGeral: TppLabel;
    Function RetornaDataServidor : TDate;
    Function RetiraPonto(OQue : string) : String;
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnCancelarClick(Sender: TObject);
    procedure edtDataInicialExit(Sender: TObject);
    procedure edtDataFinalExit(Sender: TObject);
    procedure btnOKClick(Sender: TObject);
    procedure pprRelatorioPreviewFormCreate(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure ppCabecalhoBeforePrint(Sender: TObject);
    procedure CarregaParamsBanco;
    procedure ppCabecalhoMesAnoBeforePrint(Sender: TObject);
    procedure rdbtnTodasClick(Sender: TObject);
    procedure ppCabecalhoCodUnidade_1BeforePrint(Sender: TObject);
    procedure ppRodapeCodUnidade_1BeforePrint(Sender: TObject);
    procedure ppDetalhesBeforePrint(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmRel_Prod_CD: TfrmRel_Prod_CD;
  sParametro, sSelecionaRelatorio, sMesRef, sAnoRef : string;
  sUsuarioM : string;
  dtServidor : tdate;
  iauxi, iauxf : Integer;
  iContHeader : Integer;
  rSoma_Qtd_Colab, rSoma_Qtd_Horas_Trab, rSoma_Qtd_Nfe_Rec, rSoma_Qtd_Vol_Rec,
  rSoma_Qtd_Pecas_Rec, rSoma_Qtd_Nfe_Env, rSoma_Qtd_Vol_Env, rSoma_Qtd_M3_Env,
  rSoma_Qtd_Pecas_Env, rSoma_Qtd_Lotes_Env, rSoma_Qtd_Linhas_Env, rSoma_Qtd_Lojas_Env : Real;
  sUsuario, sSenha, sBanco : String;
  sUni_Ini, sUni_Fim, sTitulo_Rel, sAcumulador,sUsuario_Rel : String;

implementation

uses uFunc, uFuncoes, ppForms, uCarregaSenha;

{$R *.dfm}

Function TfrmRel_Prod_CD.RetornaDataServidor : TDate;
begin
   qryConsulta.Active := false;
   qryConsulta.SQL.Clear;
   qryConsulta.SQL.Add('select sysdate from dual');
   try
      qryConsulta.Active := True;
      result := qryConsulta.fieldbyname('sysdate').AsDateTime;
   except
      result := Date;
   end;
   if qryConsulta.Active then
      qryConsulta.Close;
end;

Function TfrmRel_Prod_CD.RetiraPonto(OQue : string) : String;
var
   i : integer;
   aux : string;
begin
   aux := '';
   for i := 1 to Length(OQue) do
   begin
      if OQue[i] <> '.' then
      begin
         aux := aux+OQue[i];
      end;
   end;
   Result := aux;
end;

procedure TfrmRel_Prod_CD.FormShow(Sender: TObject);
begin
   qryConsulta.Active := False;
   qryRel.Active := False;
   Session1.Active := False;
   Database1.Connected := False;

   CarregaParamsBanco;

   Database1.KeepConnection := False;
   Database1.LoginPrompt := False;

   Database1.Params.Values['SERVER NAME'] := sBanco;
   Database1.Params.Values['USER NAME'] := sUsuario;
   Database1.Params.Values['PASSWORD'] := sSenha;

   try
      Database1.Connected := True;
      Session1.Active := True;
      dtServidor := RetornaDataServidor;
   except
      Informacao('Erro!!!'+#13+'Não pode se conectar ao banco!!!','Aviso!!!');
      frmRel_Prod_CD.Close;
   end;
   rdbtnTodasClick(Sender);
end;

procedure TfrmRel_Prod_CD.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
   if qryRel.Active then
      qryRel.Close;
   if qryConsulta.Active then
      qryConsulta.Close;

   if Session1.Active then
      Session1.Close;
   if Database1.Connected then
      Database1.Close;
   Action := caFree;
end;

procedure TfrmRel_Prod_CD.btnCancelarClick(Sender: TObject);
begin
   Close;
end;

procedure TfrmRel_Prod_CD.edtDataInicialExit(Sender: TObject);
begin
   if AllTrim(edtDataInicial.Text) = '//' then
      edtDataInicial.Text := FormatDateTime('dd/mm/yyyy', Date);

     if (AllTrim(edtDataInicial.Text) = '//') then
     begin
          Informacao('Data Inicial não informado !!!','Aviso...');
          edtDataInicial.SetFocus;
          Abort;
          Exit;
     end;

     if Length(AllTrim(edtDataInicial.Text)) < 10 then
     begin
          Informacao('Data Inicial não informado !!!','Aviso...');
          edtDataInicial.SetFocus;
          Abort;
          Exit;
     end;

     if ValidaData(edtDataInicial.Text) then
     begin
          edtDataInicial.SetFocus;
          Abort;
          Exit;
     end;

     if (StrToDate(edtDataInicial.Text) > StrtoDate(FormatDateTime('dd/mm/yyyy',Date))) then
     begin
          Informacao('Data Inicial não pode ser maior que a Data Atual!!!','Aviso...');
          edtDataInicial.SetFocus;
          Abort;
          Exit;
     end;
end;

procedure TfrmRel_Prod_CD.edtDataFinalExit(Sender: TObject);
begin
   edtDataInicialExit(Sender);

   if AllTrim(edtDataFinal.Text) = '//' then
      edtDataFinal.Text := FormatDateTime('dd/mm/yyyy', Date);

     if (AllTrim(edtDataInicial.Text) = '//') then
     begin
          Informacao('Data Final não informado !!!','Aviso...');
          edtDataFinal.SetFocus;
          Abort;
          Exit;
     end;

     if Length(AllTrim(edtDataFinal.Text)) < 10 then
     begin
          Informacao('Data Final não informado !!!','Aviso...');
          edtDataFinal.SetFocus;
          Abort;
          Exit;
     end;

     if ValidaData(edtDataFinal.Text) then
     begin
          edtDataFinal.SetFocus;
          Abort;
          Exit;
     end;

     if (StrToDate(edtDataFinal.Text) > StrtoDate(FormatDateTime('dd/mm/yyyy',Date))) then
     begin
          Informacao('Data Final não pode ser maior que a Data Atual!!!','Aviso...');
          edtDataFinal.SetFocus;
          Abort;
          Exit;
     end;
     if (StrToDate(edtDataInicial.Text) > StrToDate(edtDataFinal.Text)) then
     begin
          Informacao('Data Inicial não pode ser maior que a Data Final!!!','Aviso...');
          edtDataInicial.SetFocus;
          Abort;
          Exit;
     end;

end;

procedure TfrmRel_Prod_CD.btnOKClick(Sender: TObject);
var
   Size        : Cardinal;
begin
   if pnlDisplay.Visible then
      exit;
   edtDataInicialExit(Sender);
   edtDataFinalExit(Sender);


   try
                              

      Size := 128;
      SetLength(sUsuarioM,Size);
      GetUserName(PChar(sUsuarioM), Size);
      sUsuario_Rel := copy(sUsuarioM,1,6);
      sUsuarioM := Trim(sUsuario_Rel);
      pnlDisplay.Visible := true;

      Application.ProcessMessages;
      pnlbuttons.Enabled := False;
      StpRel_Campanha.Close;


      sParametro :=Trim(EdtGrupo.Text)+'#'+trim(edtDataInicial.Text)+'#'+trim(edtDataFinal.Text)+ '#'+sUsuario_Rel+'#';

      StpRel_Campanha.Params[0].Value := sParametro;
      StpRel_Campanha.ExecProc;
      qryConsulta.Active := false;
      qryConsulta.SQL.Clear;
      qryConsulta.SQL.Add('SELECT  DES_USUARIO,COD_UNIDADE,DES_UNIDADE,COD_REGIAO '+
	                        '        ,REPLACE(TO_CHAR(QTD_ENVIADOS,''999,999''),'','',''.'') QTD_ENVIADOS,PERC_ENVIADOS,REPLACE(TO_CHAR(QTD_CONTATADOS,''999,999''),'','',''.'') QTD_CONTATADOS,PERC_CONTATADOS,REPLACE(TO_CHAR(QTD_COM_COMPRAS,''999,999''),'','',''.'') QTD_COM_COMPRAS,PERC_COM_COMPRAS '+
                          '        ,REPLACE(TO_CHAR(VLR_VENDA_PERIODO,''999,999,999''),'','',''.'') VLR_VENDA_PERIODO,REPLACE(TO_CHAR(VLR_VENDA_CONTATADO,''999,999,999''),'','',''.'') VLR_VENDA_CONTATADO '+
                          '        ,REPLACE(TO_CHAR(VLR_MEDIO,''999,999,999''),'','',''.'') VLR_MEDIO,PERC_VENDA_CONTADO,COD_CAMPANHA '+
		                      '        ,DES_CAMPANHA,DIA_INICIO_CAM,DIA_FIM_CAM ,ordena '+
                          '  FROM GRZW_REL_CAMPANHA_INTRA  '+
                          ' where DES_USUARIO = '+''''+ sUsuario_Rel+''''+
                          ' ORDER BY COD_CAMPANHA,ORDENA, COD_UNIDADE ');



      try
       qryConsulta.Active := True;

      except
       Informacao('erro na consulta do relatório','Aviso');
      end;
    {  if qryConsulta.Active then
        qryConsulta.Close;
     }

      if qryConsulta.RecordCount <= 0 then
      begin
         Informacao('Não encontrou registros!!!','Aviso...');
         edtDataInicial.SetFocus;
         pnlbuttons.Enabled := True;
         pnlDisplay.Visible := false;
         frmRel_Prod_CD.Repaint;
         Application.ProcessMessages;
         exit;
      end else
      begin

        pprRelatorio.Print

      end;



      pnlbuttons.Enabled:= True;
      pnlDisplay.Visible := False;
      frmRel_Prod_CD.Repaint;
      Application.ProcessMessages;
   except
      on e:exception do
      begin
         informacao('Erro!!! Não gerou relatório...'+chr(13)+
                     e.ClassName + ' - '+e.Message,'Aviso...');
         pnlbuttons.Enabled:= True;
         pnlDisplay.Visible := false;
         frmRel_Prod_CD.Repaint;
         Application.ProcessMessages;
         exit;
      end;
   end;
end;

procedure TfrmRel_Prod_CD.pprRelatorioPreviewFormCreate(Sender: TObject);
begin
     pprRelatorio.PreviewForm.WindowState := wsMaximized;
     TppViewer(pprRelatorio.PreviewForm.Viewer).ZoomPercentage := 100;
     rSoma_Qtd_Colab:=0;      rSoma_Qtd_Horas_Trab:=0; rSoma_Qtd_Nfe_Rec:=0;
     rSoma_Qtd_Vol_Rec:=0;    rSoma_Qtd_Pecas_Rec:=0;  rSoma_Qtd_Nfe_Env:=0;
     rSoma_Qtd_Vol_Env:=0;    rSoma_Qtd_Pecas_Env:=0;  rSoma_Qtd_Lotes_Env:=0;
     rSoma_Qtd_Linhas_Env:=0; rSoma_Qtd_Lojas_Env:=0;  rSoma_Qtd_M3_Env := 0;
end;

procedure TfrmRel_Prod_CD.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
     case Key of
          VK_RETURN: Perform(WM_NEXTDLGCTL,0,0);
//          VK_UP  : Perform(WM_NEXTDLGCTL,1,0);
     end;
end;

procedure TfrmRel_Prod_CD.ppCabecalhoBeforePrint(Sender: TObject);
var  sDescricao_rede : string;
begin
if(Copy(EdtGrupo.Text,2,1) = '1')then
   begin
        sDescricao_rede :='Grazziotin';
   end;
   if(Copy(EdtGrupo.Text,2,1) = '3')then
   begin
        sDescricao_rede :='Pormenos';
   end;
   if(Copy(EdtGrupo.Text,2,1) = '4')then
   begin
        sDescricao_rede :='Franco Giorgi';
   end;
   if(Copy(EdtGrupo.Text,2,1) = '5')then
   begin
        sDescricao_rede :='Tottal';
   end;
   pplblDescricao.Caption := 'Movimentos do Período de '+edtDataInicial.Text+' até '+edtDataFinal.Text+' da Rede '+sDescricao_rede+'. ';
end;

procedure TfrmRel_Prod_CD.CarregaParamsBanco;
var TomEncryption1: TTomEncryption;
begin
    TomEncryption1 := TTomEncryption.Create(Self);
    CarregaSenhasBancoOra('GRZPNL',TomEncryption1,sUsuario,sSenha,sBanco);
end;

procedure TfrmRel_Prod_CD.ppCabecalhoMesAnoBeforePrint(Sender: TObject);
begin
   rSoma_Qtd_Colab:=0;      rSoma_Qtd_Horas_Trab:=0; rSoma_Qtd_Nfe_Rec:=0;
   rSoma_Qtd_Vol_Rec:=0;    rSoma_Qtd_Pecas_Rec:=0;  rSoma_Qtd_Nfe_Env:=0;
   rSoma_Qtd_Vol_Env:=0;    rSoma_Qtd_Pecas_Env:=0;  rSoma_Qtd_Lotes_Env:=0;
   rSoma_Qtd_Linhas_Env:=0; rSoma_Qtd_Lojas_Env:=0;  rSoma_Qtd_M3_Env:=0;
   iContHeader := 0;
end;

procedure TfrmRel_Prod_CD.rdbtnTodasClick(Sender: TObject);
begin

   
   sTitulo_Rel := 'Listando Todas as Campanhas da Rede';
end;









procedure TfrmRel_Prod_CD.ppCabecalhoCodUnidade_1BeforePrint(
  Sender: TObject);
begin
   rSoma_Qtd_Colab:=0;      rSoma_Qtd_Horas_Trab:=0; rSoma_Qtd_Nfe_Rec:=0;
   rSoma_Qtd_Vol_Rec:=0;    rSoma_Qtd_Pecas_Rec:=0;  rSoma_Qtd_Nfe_Env:=0;
   rSoma_Qtd_Vol_Env:=0;    rSoma_Qtd_Pecas_Env:=0;  rSoma_Qtd_Lotes_Env:=0;
   rSoma_Qtd_Linhas_Env:=0; rSoma_Qtd_Lojas_Env:=0;  rSoma_Qtd_M3_Env:=0;
   iContHeader:=0;
end;

procedure TfrmRel_Prod_CD.ppRodapeCodUnidade_1BeforePrint(Sender: TObject);
begin

   rSoma_Qtd_Colab:=0;      rSoma_Qtd_Horas_Trab:=0; rSoma_Qtd_Nfe_Rec:=0;
   rSoma_Qtd_Vol_Rec:=0;    rSoma_Qtd_Pecas_Rec:=0;  rSoma_Qtd_Nfe_Env:=0;
   rSoma_Qtd_Vol_Env:=0;    rSoma_Qtd_Pecas_Env:=0;  rSoma_Qtd_Lotes_Env:=0;
   rSoma_Qtd_Linhas_Env:=0; rSoma_Qtd_Lojas_Env:=0;  rSoma_Qtd_M3_Env:=0;
   iContHeader := 0;
end;




procedure TfrmRel_Prod_CD.ppDetalhesBeforePrint(Sender: TObject);
begin
    if ((ppDBCod_unidade.Text ='910') or (ppDBCod_unidade.Text ='999') or (ppDBCod_unidade.Text ='920')
          or (ppDBCod_unidade.Text ='930')  or (ppDBCod_unidade.Text ='940') or (ppDBCod_unidade.Text ='950') or (ppDBCod_unidade.Text ='99999')) then
      begin
         ppDBText1.Font.Style :=[fsBold] ;
         ppDBText1.Font.Size := 8;
         ppDBCod_unidade.Font.Style :=[fsBold] ;
         ppDBCod_unidade.Font.Size := 8;
         ppDBText3.Font.Style   :=[fsBold] ;
         ppDBText3.Font.Size := 8;
         ppDBText4.Font.Style   :=[fsBold] ;
         ppDBText4.Font.Size := 8;
         ppDBText9.Font.Style   :=[fsBold] ;
         ppDBText9.Font.Size := 8;
         ppDBText10.Font.Style   :=[fsBold] ;
         ppDBText10.Font.Size := 8;
         ppDBText11.Font.Style   :=[fsBold] ;
         ppDBText11.Font.Size := 8;
         ppDBText12.Font.Style   :=[fsBold] ;
         ppDBText12.Font.Size := 8;
         ppDBText14.Font.Style   :=[fsBold] ;
         ppDBText14.Font.Size := 8;
         ppDBText15.Font.Style   :=[fsBold] ;
         ppDBText15.Font.Size := 8;
         ppDBText17.Font.Style   :=[fsBold] ;
         ppDBText17.Font.Size := 8;
         ppDBText18.Font.Style   :=[fsBold] ;
         ppDBText18.Font.Size := 8;
         ppLabel4.Font.Style     :=[fsBold] ;
         ppLabel4.Font.Size := 8;
         ppLine2.Visible := True;
         ppLine2.Font.Size := 8;
         ppDBCod_unidade.Visible := False;
         ppDBText7.Visible := True;
         ppDBText7.Font.Size := 8;
         ppLabel13.Visible := True;
         ppLabel13.Font.Size := 8;

         ppDBText1.Visible := False;
         ppLabel4.Visible  := False;

         if((ppDBCod_unidade.Text ='999')) then
         begin
            ppLine2.Visible := True;
            ppLabel3.Visible := True;
            ppLabel3.Font.Size := 8;
            ppLabel15.Visible := False;
            ppLabel15.Font.Size := 8;
            ppLabelGeral.Visible := False;


         end else
         begin

            if ((ppDBCod_unidade.Text ='910') or (ppDBCod_unidade.Text ='920')
          or (ppDBCod_unidade.Text ='930')  or (ppDBCod_unidade.Text ='940') or (ppDBCod_unidade.Text ='950'))  then
           begin
               ppLabel15.Visible  := True;    //total campanha
               ppLabel3.Visible   := False;   //regiao
               ppDBText7.Visible  := False;   //unidades
               ppLabelGeral.Visible := False;
           
           end else
          begin

            if (ppDBCod_unidade.Text ='99999')then
            begin
               ppLabel15.Visible  := False;    //total campanha
               ppLabel3.Visible   := False;   //regiao
               ppDBText7.Visible  := False;   //unidades
               ppLabelGeral.Visible := True;

            end else
            begin
               ppLabelGeral.Visible := False;
               ppLabel15.Visible := False;
               ppLabel15.Font.Size := 8;
               ppLabel3.Visible := False;
               ppLabel3.Font.Size := 8;
            end;


           


          end;


         end;



       end
     else
     begin

        ppLabelGeral.Visible := False;
        ppDBCod_unidade.Visible :=True;
        ppDBCod_unidade.Font.Size := 7;
        ppDBText1.Font.Style :=[]; // ppDBText2.Font;
        ppDBText1.Font.Size := 7;
        ppDBCod_unidade.Font.Style :=[];
        ppDBCod_unidade.Font.Size := 7;
        ppDBText3.Font.Style   :=[];
        ppDBText3.Font.Size := 7;
        ppDBText4.Font.Style   :=[];
        ppDBText4.Font.Size := 7;
        ppDBText9.Font.Style   :=[];
        ppDBText9.Font.Size := 7;
        ppDBText10.Font.Style  :=[];
        ppDBText10.Font.Size := 7;
        ppDBText11.Font.Style  :=[];
        ppDBText11.Font.Size := 7;
        ppDBText12.Font.Style  :=[];
        ppDBText12.Font.Size := 7;
        ppDBText14.Font.Style  :=[];
        ppDBText14.Font.Size := 7;
        ppDBText15.Font.Style  :=[];
        ppDBText15.Font.Size := 7;
        ppDBText17.Font.Style  :=[];
        ppDBText17.Font.Size := 7;
        ppDBText18.Font.Style  :=[];
        ppDBText18.Font.Size := 7;
        ppLabel4.Font.Style   :=[];
        ppLabel4.Font.Size := 7;
        ppLine2.Visible := False;
        ppLabel3.Visible := False;
        ppDBText7.Visible := False;
        ppLabel13.Visible := False;

        
        ppDBText1.Visible := True;
        ppDBText1.Font.Size := 7;
        ppLabel4.Visible := True;
        ppLabel4.Font.Size := 7;
        ppDBCod_unidade.Visible := True;
        ppDBCod_unidade.Font.Size := 7;

        ppLabel15.Visible := False;
        ppLabel15.Font.Size := 7;

     end;




end;

end.





